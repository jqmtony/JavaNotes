一.SpringMVC

1.环境搭建
(web.xml:核心分派器)
(spring-servlet.xml:controller包扫描/视图解析器)

2.web->传递信息->controller

3.controller->传递信息->web
(路由功能的接口-多见于常规的开发风格-多用于接收常规请求)
(数据功能的接口-多见于前后端分离的开发风格-多用于接收ajax请求)

4.工作流程
一切请求被DispatcherServlet拦截

DispatcherServlet从spring-servlet.xml中读取控制器路径/
把请求分派到各控制器类

控制器类做业务处理 给出web响应 
(渲染视图-数据放入model域-路由型)
(输出json-数据型)

5.MVC概念
C-Controller-整个MVC的核心 用于接收http请求并给出响应

V-View-视图-物理视图

M-Model-模型-数据模型

6.Controller的几种返回类型
-ModelAndView-路由型-接收常规请求
-String-路由型-上一种的简写-接收常规请求
-void-返回json数据型-用resp输出json-接收ajax请求
-List<Entity>-返回json数据型-需配合@ResponseBody注解-接收ajax请求

二.SpringJdbc
1.复习数据库
基本CRUD
索引
(索引相当于书籍目录，用于优化查询。)
(主键默认携带索引，另外，经常被where过滤的字段可以考虑手工添加索引。)
(索引的好处是优化查询性能，坏处是拖慢写表性能。)
分组查询
子查询
(in)
(exist)
联表查询
(where部分跨表，既可做子查询又可做联表查询。)
(select部分跨表，只能做联表查询。)

表复制/表清空
case-when-then

存储过程/自定义函数
(传入参数/传出参数)
视图/触发器
设计与优化

2.整合SpringJdbc持久层
核心意图:创建出jdbcTemplate对象->用此对象操作数据库



